- There must be a global filters
- A default global filter must be responsible for endpoints addressing
- Filters must be addable per endpoint
 -Endpoint's filters available by default:
    - cache
- Endpoint must has descriptor that:  
    - has the endpoint performer (see below)
    - Allowed method openers
    - Model reader / writters
    - model validators
- Endpoint must sophisticated base that could be easily used:
    - Passing to the performer (if implementing):
        - Request object that has:
            - headers
            - method
            - full url
        - Any custom object that is there
- There must be default response writters for:
    - html template
    - file reader
    - object xml, json writter
- There must be special type of exception attribute and be set in app
- There must be controller for 404

- Cases to support:
	- [x] fast performer, ie no 'new' or factory.GetSomething cases
	- [x] support for value types without boxing/unboxing, ie requests of type int
	- [x] support for requestless http endpoints
	- [x] support for database session getting
	- [x] common way to handle authentication
	- [x] support for strongly typed (view data) html view engine
	- [x] javascript bindings and client validation
	- [ ] support of http sesssion
	- [ ] support for content neogotiation (json, xml)
	- common way to handle measuring
	- support for i18n
	- support for devices views
	- support for async and canceable(?) performers as part of the descriptors
	- long polling and web sockets investigation/consideration 
	- caching